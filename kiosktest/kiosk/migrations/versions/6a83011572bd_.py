"""empty message

Revision ID: 6a83011572bd
Revises: b7cddbd0869a
Create Date: 2023-08-20 14:44:52.342643

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '6a83011572bd'
down_revision: Union[str, None] = 'b7cddbd0869a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('state',
    sa.Column('state_pk', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state_name', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['kiosk.face_analysis.id'], ),
    sa.PrimaryKeyConstraint('state_pk'),
    schema='kiosk'
    )
    op.drop_index('ix_kiosk_orderer_orderer_id', table_name='orderer')
    op.drop_table('orderer')
    op.drop_constraint('menu_ibfk_1', 'menu', type_='foreignkey')
    op.create_foreign_key(None, 'menu', 'categories', ['category_pk'], ['category_pk'], source_schema='kiosk', referent_schema='kiosk')
    op.drop_constraint('order_detail_ibfk_1', 'order_detail', type_='foreignkey')
    op.drop_constraint('order_detail_ibfk_2', 'order_detail', type_='foreignkey')
    op.create_foreign_key(None, 'order_detail', 'face_analysis', ['face_analysis_id'], ['id'], source_schema='kiosk', referent_schema='kiosk')
    op.create_foreign_key(None, 'order_detail', 'menu', ['menu_pk'], ['menu_pk'], source_schema='kiosk', referent_schema='kiosk')
    op.drop_constraint('order_option_ibfk_2', 'order_option', type_='foreignkey')
    op.drop_constraint('order_option_ibfk_1', 'order_option', type_='foreignkey')
    op.create_foreign_key(None, 'order_option', 'order_detail', ['order_detail_pk'], ['order_detail_pk'], referent_schema='kiosk')
    op.create_foreign_key(None, 'order_option', 'option_', ['option_pk'], ['option_pk'], referent_schema='kiosk')
    op.drop_constraint('recommended_menu_ibfk_1', 'recommended_menu', type_='foreignkey')
    op.create_foreign_key(None, 'recommended_menu', 'menu', ['menu_pk'], ['menu_pk'], source_schema='kiosk', referent_schema='kiosk')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'recommended_menu', schema='kiosk', type_='foreignkey')
    op.create_foreign_key('recommended_menu_ibfk_1', 'recommended_menu', 'menu', ['menu_pk'], ['menu_pk'])
    op.drop_constraint(None, 'order_option', type_='foreignkey')
    op.drop_constraint(None, 'order_option', type_='foreignkey')
    op.create_foreign_key('order_option_ibfk_1', 'order_option', 'option_', ['option_pk'], ['option_pk'])
    op.create_foreign_key('order_option_ibfk_2', 'order_option', 'order_detail', ['order_detail_pk'], ['order_detail_pk'])
    op.drop_constraint(None, 'order_detail', schema='kiosk', type_='foreignkey')
    op.drop_constraint(None, 'order_detail', schema='kiosk', type_='foreignkey')
    op.create_foreign_key('order_detail_ibfk_2', 'order_detail', 'face_analysis', ['face_analysis_id'], ['id'])
    op.create_foreign_key('order_detail_ibfk_1', 'order_detail', 'menu', ['menu_pk'], ['menu_pk'])
    op.drop_constraint(None, 'menu', schema='kiosk', type_='foreignkey')
    op.create_foreign_key('menu_ibfk_1', 'menu', 'categories', ['category_pk'], ['category_pk'])
    op.create_table('orderer',
    sa.Column('orderer_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('orderer_name', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('orderer_phone', mysql.VARCHAR(length=50), nullable=False),
    sa.Column('orderer_gender', mysql.VARCHAR(length=10), nullable=False),
    sa.Column('orderer_age', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('orderer_id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('ix_kiosk_orderer_orderer_id', 'orderer', ['orderer_id'], unique=False)
    op.drop_table('state', schema='kiosk')
    # ### end Alembic commands ###
